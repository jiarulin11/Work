double** PI(int a,int b,int dim);
double detLU(double **A,int n);
double** noise_mg(int n,int test,int number_tests);
double** noise_G(int n,int test,int number_tests);
double** noise_acc(int n,int test,int number_tests);
double** testGolden(int n,int test,int number_tests);
double** create_vec(double x0,double p,double xf);
double** randn(int n);
double sum(double **v,int N);
double mean(double **v,int N);
double var(double **v, int N);
double** alloc(int row,int col);
void printM(double **v,int row,int col);
void dalloc(double **a,int row);
double** noise_generation(double sigma_G,double moy, int n);
double** mm(double **A,int row_a,int col_a,double **B,int row_b,int col_b);
double** eye(int dim);
double** mcm(double c,double **A,int row, int col);
double norm(double **v,int n);
double* mcv(double c,double *v,int dim);
double** skew(double **w0);
double** omega_gen(double **w0);
double** H_gen(double **s,double **d);
double** addM(double **a,double **b,int row,int col,int op);
double fat(int n);
double** powM(double **A,int row,int col, int n);
double** reduction(double **A,int n, int row,int col);
double det(double **A,int n);
double** transpose(double **a,int row,int col);
double** prodq(double **qa,double **qb);
double** abs(double **A,int row,int col);
double** inv(double **a,int n);
double log_2(double x);
double trace(double **A,int dim);
double norminf(double **A,int n);
double** sumM(double **A,double **B,int row, int col,double op);
double** expm(double **A, int n);
double** sep_col(double **A,int op_col,int row);
double** sep_row(double **A,int op_row,int col);
double dot(double** v1,double **v2,int dim);
double** rotation_matrix(double **e,double e0);
double** E1_gen(double **xm_vect,double xm0);
double** H_bar_gen(double** H, double** H2);
double** R_bar_gen(double** R1, double** R2);
double** noise(char filename[30],int n);
double** get_mag(int n,int iteration,int number_of_tests);
double** get_acc(int n, int iteration, int number_of_tests);
double** get_gyros(int n, int iteration, int number_of_tests);
void store(char name[30],double **var,int row,int col,char option[]);
double** read_temp(char name[20],int row,int col);
